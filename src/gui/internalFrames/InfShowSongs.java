/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package gui.internalFrames;

import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import logic.BLAudioPlayer;
import logic.BLMusic;
import logic.BLPlaylist;
import logic.BLSong;
import structures.linkedlist.ListaCircular;//quitar
import structures.node.Nodo;    
import structures.object.Playlist;
import structures.object.Song;  
import structures.tree.ArbolBB;

/**
 *
 * @author CRISTHIAN
 */
public class InfShowSongs extends javax.swing.JInternalFrame {
    DefaultTableModel modelo = new DefaultTableModel();
    BLMusic b = new BLMusic();
    //ListaCircular<Song> temporario = new ListaCircular<>();
    ArbolBB<Song> temporario = new ArbolBB<>();
    int cont=0;
    private int highlightedRow = -1;
    /**
     * Creates new form InfShowSongs
     */
    public InfShowSongs() {
        initComponents();   
        inicializarModelo();
        llenarCbx();
        llenarTabla();
        btnAddToPlaylist.setEnabled(false);
        cbxPlaylist.setEnabled(false);
        
        tblSongChart.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component cell = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                if (row == highlightedRow) {
                    cell.setBackground(Color.YELLOW); // Resaltar fila en amarillo
                } else {
                    cell.setBackground(Color.WHITE); // Color original
                }
                return cell;
            }
        });
    }
    
    private void inicializarModelo() {
        String[] titulos = {"Nombre", "Artista", "Género", "Duración", "Playlist"};
        modelo.setColumnIdentifiers(titulos);
        tblSongChart.setModel(modelo);
    }

    private void agregarFila(DefaultTableModel modelo, Song dato) {
        Object[] fila = {dato.getSongName(), dato.getArtistName(),dato.getGenre(),
        dato.getDuration(),dato.getNamePlaylist()};
        modelo.addRow(fila);
    }
    
    private void limpiarTabla(DefaultTableModel modelo) {
        int filas = modelo.getRowCount();
        for (int i = 0; i < filas; i++) {
            modelo.removeRow(0);
        }
    }
    
    
    public void mostrar() {
        String titulos[] = {"Nombre", "Artista", "Género", "Duración", "Playlist"};
        modelo.setColumnIdentifiers(titulos);
        limpiarTabla(modelo);
        temporario.enOrden(modelo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        ctrlMusic = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSongChart = new javax.swing.JTable();
        lblsearchSong = new javax.swing.JLabel();
        txtSearchSong = new javax.swing.JTextField();
        btnlookFor = new javax.swing.JButton();
        ctrlMusic2 = new javax.swing.JLabel();
        btnGoOut = new javax.swing.JButton();
        lblPlaylist = new javax.swing.JLabel();
        cbxPlaylist = new javax.swing.JComboBox<>();
        btnAddToPlaylist = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("CANCIONES REGISTRADAS");

        ctrlMusic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/icons/musicizi.png"))); // NOI18N
        ctrlMusic.setLabelFor(ctrlMusic);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ctrlMusic)
                .addGap(85, 85, 85))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ctrlMusic)
                .addContainerGap())
        );

        tblSongChart.setModel(modelo);
        jScrollPane1.setViewportView(tblSongChart);

        lblsearchSong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblsearchSong.setText("Buscar Cancion:");

        btnlookFor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnlookFor.setText("Buscar");
        btnlookFor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlookForActionPerformed(evt);
            }
        });

        ctrlMusic2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/icons/icono.music11 (1).png"))); // NOI18N
        ctrlMusic2.setLabelFor(ctrlMusic2);

        btnGoOut.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnGoOut.setText("Salir");
        btnGoOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoOutActionPerformed(evt);
            }
        });

        lblPlaylist.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPlaylist.setText("Añadir a otra Playlist :");

        cbxPlaylist.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbxPlaylist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Playlist" }));
        cbxPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPlaylistActionPerformed(evt);
            }
        });

        btnAddToPlaylist.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAddToPlaylist.setText("Agregar a playlist");
        btnAddToPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToPlaylistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGoOut, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(ctrlMusic2)
                .addGap(161, 161, 161))
            .addGroup(jPanel1Layout.createSequentialGroup()

                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblsearchSong)
                            .addComponent(lblPlaylist))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbxPlaylist, 0, 165, Short.MAX_VALUE)
                            .addComponent(txtSearchSong))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAddToPlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnlookFor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 61, Short.MAX_VALUE))

        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblsearchSong)
                    .addComponent(txtSearchSong, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnlookFor))

                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPlaylist)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAddToPlaylist)))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)

                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGoOut, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ctrlMusic2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(53, 53, 53))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 4, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnlookForActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlookForActionPerformed
        if(cont==0){
            String busqueda = txtSearchSong.getText();
            songs = BLSong.list();
            s = songs.iterator();
            while(s.hasNext()){
                song = s.next();
                b.addSong(song);
            }
            Song temp = b.searchSong(busqueda);
            if (temp != null) {
                
                for (int i = 0; i < tblSongChart.getRowCount(); i++) {
                    if (tblSongChart.getValueAt(i, 0).equals(temp.getSongName())) {
                        highlightedRow = i; // Guardar el índice de la fila.
                        break;
                    }
                }
                tblSongChart.repaint();
                
                cont++;
                txtSearchSong.setEnabled(false);
                btnlookFor.setEnabled(false);
                btnAddToPlaylist.setEnabled(true);
                cbxPlaylist.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "Canción no encontrada");
                cont=0;
                txtSearchSong.setText("");
                txtSearchSong.requestFocus();
                btnAddToPlaylist.setEnabled(false);
                cbxPlaylist.setEnabled(false);
            }      
        }
    }//GEN-LAST:event_btnlookForActionPerformed

    private void btnGoOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoOutActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnGoOutActionPerformed

    private void cbxPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPlaylistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxPlaylistActionPerformed

    private void btnAddToPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToPlaylistActionPerformed
        if(cont==1){
            int res;
            String nameSong = txtSearchSong.getText();
            song = BLSong.busqueda(nameSong); 
            String playlist = String.valueOf(cbxPlaylist.getSelectedItem());  
            if (playlist.equals(song.getNamePlaylist())){
                JOptionPane.showMessageDialog(null, "Esa canción ya está registrada en esa playlist");
                
            }else{
                res=BLSong.insertar(song.getSongName(), song.getArtistName(), song.getFilePath()
                    , song.getGenre(), song.getDuration(), playlist);
                if (res == 0) { 
                    JOptionPane.showMessageDialog(null, "Canción registrada exitosamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    if(res==1 || res==3){
                        JOptionPane.showMessageDialog(null, "No se pudo registrar la canción", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            cbxPlaylist.setSelectedIndex(0);
            cont=0;
            txtSearchSong.setText("");
            txtSearchSong.requestFocus();
            txtSearchSong.setEnabled(true);
            btnlookFor.setEnabled(true);
            btnAddToPlaylist.setEnabled(false);
            cbxPlaylist.setEnabled(false);
            
            highlightedRow = -1; // Restablecer el índice de la fila resaltada.
            tblSongChart.repaint();
        }
    }//GEN-LAST:event_btnAddToPlaylistActionPerformed
    
    
    private void llenarCbx() {
        list = BLPlaylist.list();
        p = list.iterator();
        while(p.hasNext()) {
            obj = p.next();
            cbxPlaylist.addItem(obj.getName());
        }     
    }

    private void llenarTabla(){
        songs = BLSong.list();
        s = songs.iterator();
        while(s.hasNext()) {
            song = s.next();
            //temporario.inserta(song);
            temporario.inserta(song);
        }
        mostrar();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToPlaylist;
    private javax.swing.JButton btnGoOut;
    private javax.swing.JButton btnlookFor;
    private javax.swing.JComboBox<String> cbxPlaylist;
    private javax.swing.JLabel ctrlMusic;
    private javax.swing.JLabel ctrlMusic2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPlaylist;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblsearchSong;
    private javax.swing.JTable tblSongChart;
    private javax.swing.JTextField txtSearchSong;
    // End of variables declaration//GEN-END:variables
    private Song song;
    private Playlist obj;
    private Iterator<Playlist> p;
    private Iterator<Song> s;
    private ArrayList<Playlist> list;
    private ArrayList<Song> songs;
}
